<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
        LeetCode 498: Diagonal Traverse
    </title>
    <link rel="stylesheet" href="/styles.css" />
    <script src="/solution.js"></script>
</head>

<body>
    <main>
        <h1>LeetCode 498: Diagonal Traverse (C++)</h1>
        <div class="problem-description">
            <p><strong>Problem:</strong>
                Given an m x n matrix mat, return an array of all the elements of the array in a diagonal order.
            </p>
            <p><strong>Example:</strong>
                Input: mat = [[1,2,3],[4,5,6],[7,8,9]]<br>
                Output: [1,2,4,7,5,3,6,8,9]<br>
                Explanation: We traverse the matrix diagonally, alternating directions for each diagonal.
            </p>
        </div>
        <div class="code-container">
            <button class="copy-button" onclick="copyCode(this)">Copy Code</button>
            <pre><code class="language-cpp">class Solution {
public:
    vector&lt;int&gt; findDiagonalOrder(vector&lt;vector&lt;int&gt;&gt;&amp; mat) {
        int m = mat.size();
        int n = mat[0].size();
        vector&lt;int&gt; result;
        
        int row = 0, col = 0;
        bool goingUp = true; // Direction flag
        
        for (int i = 0; i &lt; m * n; i++) {
            result.push_back(mat[row][col]);
            
            if (goingUp) {
                // Moving up-right
                if (col == n - 1) {
                    // Hit right boundary, move down and change direction
                    row++;
                    goingUp = false;
                } else if (row == 0) {
                    // Hit top boundary, move right and change direction
                    col++;
                    goingUp = false;
                } else {
                    // Normal up-right movement
                    row--;
                    col++;
                }
            } else {
                // Moving down-left
                if (row == m - 1) {
                    // Hit bottom boundary, move right and change direction
                    col++;
                    goingUp = true;
                } else if (col == 0) {
                    // Hit left boundary, move down and change direction
                    row++;
                    goingUp = true;
                } else {
                    // Normal down-left movement
                    row++;
                    col--;
                }
            }
        }
        
        return result;
    }
};</code></pre>
        </div>
        <a href="/" class="back-link">‚Üê Back to Home</a>
    </main>
</body>

</html>