<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
        LeetCode 120: Triangle (C++)
    </title>
    <link rel="stylesheet" href="/styles.css" />
    <script src="/solution.js"></script>
</head>
<body>
    <main>
        <h1>LeetCode 120: Triangle (C++)</h1>
        <div class="problem-description">
            <p><strong>Problem:</strong>
                Given a triangle array, return the minimum path sum from top to bottom. For each step, you may move to an adjacent number of the row below. More formally, if you are on index i on the current row, you may move to either index i or index i + 1 on the next row.
            </p>
            <p><strong>Example:</strong>
                Input: triangle = [[2],[3,4],[6,5,7],[4,1,8,3]] → Output: 11. The minimum path sum is 2 + 3 + 5 + 1 = 11 (path: 2→3→5→1).
            </p>
        </div>
        <div class="code-container">
            <button class="copy-button" onclick="copyCode(this)">Copy Code</button>
            <pre><code class="language-cpp">class Solution {
public:
    int minimumTotal(vector&lt;vector&lt;int&gt;&gt;&amp; triangle) {
        int n = triangle.size();
        vector&lt;int&gt; dp(n + 1, 0);
        
        for (int row = n - 1; row &gt;= 0; --row) {
            for (int col = 0; col &lt;= row; ++col) {
                dp[col] = min(dp[col], dp[col + 1]) + triangle[row][col];
            }
        }
        
        return dp[0];
    }
};</code></pre>
        </div>
        <a href="/" class="back-link">← Back to Home</a>
    </main>
</body>
</html>