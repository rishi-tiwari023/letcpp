<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
        LeetCode 3289: The Two Sneaky Numbers of Digitville (C++)
    </title>
    <link rel="stylesheet" href="/styles.css" />
    <script src="/solution.js"></script>
</head>

<body>
    <main>
        <h1>LeetCode 3289: The Two Sneaky Numbers of Digitville (C++)</h1>
        <div class="problem-description">
            <p><strong>Problem:</strong>
                In the town of Digitville, there was a list of numbers called nums containing integers from 0 to n - 1.
                Each number was supposed to appear exactly once in the list, however, two mischievous numbers sneaked in
                an additional time, making the list longer than usual. As the town detective, your task is to find these
                two sneaky numbers. Return an array of size two containing the two numbers (in any order), so peace can
                return to Digitville.
            </p>
            <p><strong>Example:</strong>
                Input: nums = [0,1,1,0] → Output: [0,1]. The numbers 0 and 1 each appear twice in the array.
                Input: nums = [0,3,2,1,3,2] → Output: [2,3]. The numbers 2 and 3 each appear twice in the array.
                Input: nums = [7,1,5,4,3,4,6,0,9,5,8,2] → Output: [4,5]. The numbers 4 and 5 each appear twice.
            </p>
        </div>
        <div class="code-container">
            <button class="copy-button" onclick="copyCode(this)">Copy Code</button>
            <pre><code class="language-cpp">// Approach 2: After sorting, just comparing adjacents;
class Solution {
public:
    vector&lt;int&gt; getSneakyNumbers(vector&lt;int&gt;&amp; nums) {
        vector&lt;int&gt; dups;
        sort(nums.begin(),nums.end());
        for(int i=1; i&lt;nums.size();i++)
        {
            if(nums[i]==nums[i-1])
            {
                dups.push_back(nums[i-1]);
            }
            if(dups.size()==2)
                break;
        }
        return dups;
    }
};</code></pre>
        </div>
        <a href="/" class="back-link">← Back to Home</a>
    </main>
</body>

</html>